# Generated by Django 3.0.5 on 2020-05-05 22:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientName',
            fields=[
                ('clientid', models.IntegerField(db_column='clientID', primary_key=True, serialize=False)),
                ('clientname', models.CharField(blank=True, max_length=45, null=True)),
                ('clienttype', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'client name',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('modelnumber', models.IntegerField(db_column='modelNumber', primary_key=True, serialize=False)),
                ('productname', models.CharField(blank=True, db_column='productName', max_length=45, null=True)),
                ('celltech', models.CharField(blank=True, db_column='cellTech', max_length=45, null=True)),
                ('cellman', models.CharField(blank=True, db_column='cellMan', max_length=45, null=True)),
                ('numberofcells', models.CharField(blank=True, db_column='numberOfCells', max_length=45, null=True)),
                ('cellsinseries', models.CharField(blank=True, db_column='cellsInSeries', max_length=45, null=True)),
                ('seriesinstrings', models.CharField(blank=True, db_column='seriesInStrings', max_length=45, null=True)),
                ('diodes', models.CharField(blank=True, max_length=45, null=True)),
                ('productlen', models.CharField(blank=True, db_column='productLen', max_length=45, null=True)),
                ('productwidth', models.CharField(blank=True, db_column='productWidth', max_length=45, null=True)),
                ('productweight', models.CharField(blank=True, db_column='productWeight', max_length=45, null=True)),
                ('superstatetype', models.CharField(blank=True, db_column='superstateType', max_length=45, null=True)),
                ('substrateman', models.CharField(blank=True, db_column='substrateMan', max_length=45, null=True)),
                ('frametype', models.CharField(blank=True, db_column='frameType', max_length=45, null=True)),
                ('frameadhesive', models.CharField(blank=True, db_column='frameAdhesive', max_length=45, null=True)),
                ('encapsulanttype', models.CharField(blank=True, db_column='encapsulantType', max_length=45, null=True)),
                ('encapsulantman', models.CharField(blank=True, db_column='encapsulantMan', max_length=45, null=True)),
                ('junctionboxtype', models.CharField(blank=True, db_column='junctionBoxType', max_length=45, null=True)),
                ('junctionboxman', models.CharField(blank=True, db_column='junctionBoxMan', max_length=45, null=True)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='TestSequence',
            fields=[
                ('sequenceid', models.IntegerField(db_column='sequenceID', primary_key=True, serialize=False)),
                ('sequencename', models.CharField(blank=True, db_column='sequenceName', max_length=45, null=True)),
            ],
            options={
                'db_table': 'test sequence',
            },
        ),
        migrations.CreateModel(
            name='TestStandard',
            fields=[
                ('standardid', models.IntegerField(db_column='standardID', primary_key=True, serialize=False)),
                ('standardname', models.CharField(blank=True, db_column='standardName', max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('publisheddate', models.CharField(blank=True, db_column='publishedDate', max_length=45, null=True)),
            ],
            options={
                'db_table': 'test standard',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='userID', primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=45)),
                ('lname', models.CharField(blank=True, max_length=45, null=True)),
                ('mname', models.CharField(blank=True, max_length=45, null=True)),
                ('jobtitle', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('officephone', models.CharField(blank=True, max_length=45, null=True)),
                ('cellphone', models.CharField(blank=True, max_length=45, null=True)),
                ('clientid', models.ForeignKey(db_column='clientID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.ClientName')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('serviceid', models.IntegerField(db_column='serviceID', primary_key=True, serialize=False)),
                ('servicename', models.CharField(blank=True, db_column='serviceName', max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=45, null=True)),
                ('isflrequired', models.CharField(blank=True, db_column='isFLrequired', max_length=45, null=True)),
                ('flfrequency', models.CharField(blank=True, db_column='Flfrequency', max_length=45, null=True)),
                ('standardid', models.ForeignKey(db_column='standardID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.TestStandard')),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.IntegerField(db_column='locationID', primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=45, null=True)),
                ('address2', models.CharField(blank=True, max_length=45, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('state', models.CharField(blank=True, max_length=45, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=45, null=True)),
                ('country', models.CharField(blank=True, max_length=45, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=45, null=True)),
                ('faxnumber', models.CharField(blank=True, max_length=45, null=True)),
                ('clientid', models.ForeignKey(db_column='clientID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.ClientName')),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('certificatenumber', models.IntegerField(db_column='certificateNumber', primary_key=True, serialize=False)),
                ('id', models.CharField(blank=True, db_column='ID', max_length=45, null=True)),
                ('reportnumber', models.CharField(blank=True, db_column='reportNumber', max_length=45, null=True)),
                ('issuedate', models.CharField(blank=True, db_column='issueDate', max_length=45, null=True)),
                ('certificatecol', models.CharField(blank=True, db_column='Certificatecol', max_length=45, null=True)),
                ('locationid', models.ForeignKey(db_column='locationID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.Location')),
                ('modelnumber', models.ForeignKey(db_column='modelNumber', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.Product')),
                ('standardid', models.ForeignKey(db_column='standardID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.TestStandard')),
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.User')),
            ],
            options={
                'db_table': 'certificate',
            },
        ),
        migrations.CreateModel(
            name='PerformanceData',
            fields=[
                ('modelnumber', models.OneToOneField(db_column='modelNumber', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='backend.Product')),
                ('maxsysvolt', models.CharField(blank=True, db_column='maxSysVolt', max_length=45, null=True)),
                ('voc', models.CharField(blank=True, db_column='VOC', max_length=45, null=True)),
                ('isc', models.CharField(blank=True, db_column='ISC', max_length=45, null=True)),
                ('vmp', models.CharField(blank=True, db_column='VMP', max_length=45, null=True)),
                ('imp', models.CharField(blank=True, db_column='IMP', max_length=45, null=True)),
                ('pmp', models.CharField(blank=True, db_column='PMP', max_length=45, null=True)),
                ('ff', models.CharField(blank=True, db_column='FF', max_length=45, null=True)),
                ('test_sequence_sequenceid', models.ForeignKey(db_column='Test Sequence_sequenceID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.TestSequence')),
            ],
            options={
                'db_table': 'performance data',
                'unique_together': {('modelnumber', 'test_sequence_sequenceid')},
            },
        ),
    ]
